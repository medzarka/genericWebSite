# Generated by Django 3.0.7 on 2020-06-13 12:11

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('birth_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='footer',
            fields=[
                ('footer_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('footer_text', models.CharField(max_length=250, unique=True, verbose_name='Footer Text')),
                ('footer_year', models.CharField(max_length=250, null=True, unique=True, verbose_name='Footer Year')),
                ('footer_version', models.CharField(max_length=250, unique=True, verbose_name='Footer Version')),
                ('footer_address', models.CharField(max_length=1024, unique=True, verbose_name='Footer Address')),
                ('footer_logo', models.ImageField(upload_to='core/website/images/')),
            ],
            options={
                'verbose_name': 'Footer',
                'verbose_name_plural': 'Footers',
                'ordering': ['footer_id'],
            },
        ),
        migrations.CreateModel(
            name='language',
            fields=[
                ('language_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Language ID')),
                ('language_name', models.CharField(help_text='see https://developer.chrome.com/webstore/i18n', max_length=250, unique=True, verbose_name='Language name')),
                ('language_code', models.CharField(help_text='see https://developer.chrome.com/webstore/i18n', max_length=10, unique=True, verbose_name='Language Code')),
                ('language_logo', models.ImageField(upload_to='core/languages/flags/')),
                ('right_to_left_text', models.BooleanField(default=False, verbose_name='Is the text is written from right to left?')),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
                'ordering': ['language_name'],
            },
        ),
        migrations.CreateModel(
            name='main_site',
            fields=[
                ('site_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(max_length=250, unique=True, verbose_name='Site Name')),
                ('site_short_name', models.CharField(max_length=100, unique=True, verbose_name='Site Short Name')),
                ('site_author', models.CharField(default='', max_length=250, unique=True, verbose_name='Site Author')),
                ('site_generator', models.CharField(default='', max_length=250, unique=True, verbose_name='Site Generator')),
                ('site_description', models.CharField(default='', max_length=2000, unique=True, verbose_name='Site Description')),
                ('site_default_theme', models.CharField(default='blogs', max_length=100, unique=True, verbose_name='Site Default Theme')),
                ('site_name_link', models.CharField(max_length=250, unique=True, verbose_name='Site Name link')),
                ('site_logo', models.ImageField(upload_to='core/website/images/')),
            ],
            options={
                'verbose_name': 'Main Site',
                'verbose_name_plural': 'Main Sites',
                'ordering': ['site_id'],
            },
        ),
        migrations.CreateModel(
            name='menu',
            fields=[
                ('menu_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_order', models.IntegerField(unique=True, verbose_name='Menu Order')),
                ('menu_name', models.CharField(max_length=250, unique=True, verbose_name='Menu Name')),
                ('menu_link', models.CharField(max_length=250, null=True, verbose_name='Menu Link')),
                ('menu_isRootMenu', models.BooleanField(default=True, verbose_name='is Root Menu')),
                ('menu_fontawesome', models.CharField(blank=True, help_text='get Images form https://fontawesome.com/icons?m=free', max_length=250, null=True, verbose_name='Menu Box Item fontawesome')),
            ],
            options={
                'verbose_name': 'Menu Item',
                'verbose_name_plural': 'Menu Items',
                'ordering': ['menu_order'],
            },
        ),
        migrations.CreateModel(
            name='menu_box',
            fields=[
                ('menu_box_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_box_name', models.CharField(max_length=250, unique=True, verbose_name='Menu Box Name')),
                ('menu_box_logo', models.ImageField(blank=True, null=True, upload_to='core/website/images/')),
                ('menu_box_order', models.IntegerField(verbose_name='Menu Box Order')),
            ],
            options={
                'verbose_name': 'Menu Box',
                'verbose_name_plural': 'Menu Boxes',
                'ordering': ['menu_box_order'],
            },
        ),
        migrations.CreateModel(
            name='translation',
            fields=[
                ('translation_id', models.AutoField(primary_key=True, serialize=False, verbose_name='translation ID')),
                ('original_text', models.TextField(verbose_name='Original Text')),
                ('translated_text', models.TextField(verbose_name='Original Text')),
                ('checked', models.BooleanField(default=False, verbose_name='Translation Validated')),
                ('translation_language', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='core.language')),
            ],
            options={
                'verbose_name': 'Translation',
                'verbose_name_plural': 'Translations',
                'ordering': ['translation_language'],
            },
        ),
        migrations.CreateModel(
            name='menu_box_item',
            fields=[
                ('menu_box_item_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_box_item_name', models.CharField(max_length=250, unique=True, verbose_name='Menu Box Item Name')),
                ('menu_box_item_order', models.IntegerField(verbose_name='Menu Box Item Order')),
                ('menu_box_link', models.CharField(default='', max_length=250, verbose_name='Item link')),
                ('menu_box_item_fontawesome', models.CharField(blank=True, help_text='get Images form https://fontawesome.com/icons?m=free', max_length=250, null=True, verbose_name='Menu Box Item fontawesome')),
                ('menu_box', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.menu_box')),
            ],
            options={
                'verbose_name': 'Menu Box Item',
                'verbose_name_plural': 'Menu Box Items',
                'ordering': ['menu_box', 'menu_box_item_order'],
            },
        ),
        migrations.AddIndex(
            model_name='menu_box',
            index=models.Index(fields=['menu_box_name'], name='core_menu_b_menu_bo_9b5b33_idx'),
        ),
        migrations.AddIndex(
            model_name='menu_box',
            index=models.Index(fields=['menu_box_order'], name='core_menu_b_menu_bo_15abc9_idx'),
        ),
        migrations.AddField(
            model_name='menu',
            name='menu_super_menu',
            field=models.ForeignKey(blank=True, limit_choices_to={'menu_isRootMenu': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.menu'),
        ),
        migrations.AddIndex(
            model_name='main_site',
            index=models.Index(fields=['site_name'], name='core_main_s_site_na_3d0a75_idx'),
        ),
        migrations.AddIndex(
            model_name='main_site',
            index=models.Index(fields=['site_short_name'], name='core_main_s_site_sh_4c953d_idx'),
        ),
        migrations.AddIndex(
            model_name='language',
            index=models.Index(fields=['language_name'], name='core_langua_languag_d1ae61_idx'),
        ),
        migrations.AddIndex(
            model_name='language',
            index=models.Index(fields=['language_code'], name='core_langua_languag_3a2f09_idx'),
        ),
        migrations.AddIndex(
            model_name='footer',
            index=models.Index(fields=['footer_text'], name='core_footer_footer__22944c_idx'),
        ),
        migrations.AddIndex(
            model_name='footer',
            index=models.Index(fields=['footer_year'], name='core_footer_footer__382115_idx'),
        ),
        migrations.AddIndex(
            model_name='footer',
            index=models.Index(fields=['footer_version'], name='core_footer_footer__7fe578_idx'),
        ),
        migrations.AddIndex(
            model_name='footer',
            index=models.Index(fields=['footer_address'], name='core_footer_footer__1ef618_idx'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='translation',
            index=models.Index(fields=['translation_language'], name='core_transl_transla_08f05b_idx'),
        ),
        migrations.AddIndex(
            model_name='translation',
            index=models.Index(fields=['original_text'], name='core_transl_origina_7370d1_idx'),
        ),
        migrations.AddIndex(
            model_name='translation',
            index=models.Index(fields=['checked'], name='core_transl_checked_263cb9_idx'),
        ),
        migrations.AddIndex(
            model_name='menu_box_item',
            index=models.Index(fields=['menu_box_item_name'], name='core_menu_b_menu_bo_fb4ad0_idx'),
        ),
        migrations.AddIndex(
            model_name='menu_box_item',
            index=models.Index(fields=['menu_box_item_order'], name='core_menu_b_menu_bo_d9e644_idx'),
        ),
        migrations.AddIndex(
            model_name='menu_box_item',
            index=models.Index(fields=['menu_box'], name='core_menu_b_menu_bo_1a1750_idx'),
        ),
        migrations.AddIndex(
            model_name='menu',
            index=models.Index(fields=['menu_name'], name='core_menu_menu_na_ab6af3_idx'),
        ),
        migrations.AddIndex(
            model_name='menu',
            index=models.Index(fields=['menu_link'], name='core_menu_menu_li_9883eb_idx'),
        ),
        migrations.AddIndex(
            model_name='menu',
            index=models.Index(fields=['menu_order'], name='core_menu_menu_or_44cede_idx'),
        ),
        migrations.AddIndex(
            model_name='menu',
            index=models.Index(fields=['menu_super_menu'], name='core_menu_menu_su_66e2c8_idx'),
        ),
    ]
